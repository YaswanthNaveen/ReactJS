{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocalStorage } from \"../8-useStorage/useStorage\";\nimport * as translations from \"./translations\";\nexport default function useTranslation() {\n  _s();\n\n  const [language, setLanguage] = useLocalStorage(\"language\", \"en\");\n  const [fallbackLanguage, setFallbackLanguage] = useLocalStorage(\"fallbackLanguage\", \"en\");\n\n  const translate = key => {\n    var _ref, _getNestedTranslation;\n\n    const keys = key.split(\".\");\n    return (_ref = (_getNestedTranslation = getNestedTranslation(language, keys)) !== null && _getNestedTranslation !== void 0 ? _getNestedTranslation : getNestedTranslation(fallbackLanguage, keys)) !== null && _ref !== void 0 ? _ref : key;\n  };\n\n  return {\n    language,\n    setLanguage,\n    fallbackLanguage,\n    setFallbackLanguage,\n    t: translate\n  };\n}\n\n_s(useTranslation, \"Inpq/0XqJnlS7aVngNUBRreLkuY=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n\nfunction getNestedTranslation(language, keys) {\n  return keys.reduce((obj, key) => {\n    return obj === null || obj === void 0 ? void 0 : obj[key];\n  }, translations[language]);\n}","map":{"version":3,"sources":["C:/Users/yaswa/OneDrive/MyReact/MyReact/useful-custom-hooks/src/25-useTranslation/useTranslation.js"],"names":["useLocalStorage","translations","useTranslation","language","setLanguage","fallbackLanguage","setFallbackLanguage","translate","key","keys","split","getNestedTranslation","t","reduce","obj"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,4BAAhC;AACA,OAAO,KAAKC,YAAZ,MAA8B,gBAA9B;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,eAAe,CAAC,UAAD,EAAa,IAAb,CAA/C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,eAAe,CAC7D,kBAD6D,EAE7D,IAF6D,CAA/D;;AAKA,QAAMO,SAAS,GAAGC,GAAG,IAAI;AAAA;;AACvB,UAAMC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAb;AAEA,4CACEC,oBAAoB,CAACR,QAAD,EAAWM,IAAX,CADtB,yEAEEE,oBAAoB,CAACN,gBAAD,EAAmBI,IAAnB,CAFtB,uCAGED,GAHF;AAKD,GARD;;AAUA,SAAO;AACLL,IAAAA,QADK;AAELC,IAAAA,WAFK;AAGLC,IAAAA,gBAHK;AAILC,IAAAA,mBAJK;AAKLM,IAAAA,CAAC,EAAEL;AALE,GAAP;AAOD;;GAxBuBL,c;UACUF,e,EACgBA,e;;;AAwBlD,SAASW,oBAAT,CAA8BR,QAA9B,EAAwCM,IAAxC,EAA8C;AAC5C,SAAOA,IAAI,CAACI,MAAL,CAAY,CAACC,GAAD,EAAMN,GAAN,KAAc;AAC/B,WAAOM,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAGN,GAAH,CAAV;AACD,GAFM,EAEJP,YAAY,CAACE,QAAD,CAFR,CAAP;AAGD","sourcesContent":["import { useLocalStorage } from \"../8-useStorage/useStorage\"\r\nimport * as translations from \"./translations\"\r\n\r\nexport default function useTranslation() {\r\n  const [language, setLanguage] = useLocalStorage(\"language\", \"en\")\r\n  const [fallbackLanguage, setFallbackLanguage] = useLocalStorage(\r\n    \"fallbackLanguage\",\r\n    \"en\"\r\n  )\r\n\r\n  const translate = key => {\r\n    const keys = key.split(\".\")\r\n\r\n    return (\r\n      getNestedTranslation(language, keys) ??\r\n      getNestedTranslation(fallbackLanguage, keys) ??\r\n      key\r\n    )\r\n  }\r\n\r\n  return {\r\n    language,\r\n    setLanguage,\r\n    fallbackLanguage,\r\n    setFallbackLanguage,\r\n    t: translate,\r\n  }\r\n}\r\n\r\nfunction getNestedTranslation(language, keys) {\r\n  return keys.reduce((obj, key) => {\r\n    return obj?.[key]\r\n  }, translations[language])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}