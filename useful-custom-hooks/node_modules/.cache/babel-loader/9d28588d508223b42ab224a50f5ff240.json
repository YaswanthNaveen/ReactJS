{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport Cookies from \"js-cookie\";\nexport default function useCookie(name, defaultValue) {\n  _s();\n\n  const [value, setValue] = useState(() => {\n    const cookie = Cookies.get(name);\n    if (cookie) return cookie;\n    Cookies.set(name, defaultValue);\n    return defaultValue;\n  });\n  const updateCookie = useCallback((newValue, options) => {\n    Cookies.set(name, newValue, options);\n    setValue(newValue);\n  }, [name]);\n  const deleteCookie = useCallback(() => {\n    Cookies.remove(name);\n    setValue(null);\n  }, [name]);\n  return [value, updateCookie, deleteCookie];\n}\n\n_s(useCookie, \"UPXKYh8tvoigvHpSQWWI4/P3MTs=\");","map":{"version":3,"sources":["C:/Users/yaswa/OneDrive/MyReact/MyReact/useful-custom-hooks/src/24-useCookie/useCookie.js"],"names":["useState","useCallback","Cookies","useCookie","name","defaultValue","value","setValue","cookie","get","set","updateCookie","newValue","options","deleteCookie","remove"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,YAAzB,EAAuC;AAAA;;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACvC,UAAMQ,MAAM,GAAGN,OAAO,CAACO,GAAR,CAAYL,IAAZ,CAAf;AACA,QAAII,MAAJ,EAAY,OAAOA,MAAP;AACZN,IAAAA,OAAO,CAACQ,GAAR,CAAYN,IAAZ,EAAkBC,YAAlB;AACA,WAAOA,YAAP;AACD,GALiC,CAAlC;AAOA,QAAMM,YAAY,GAAGV,WAAW,CAC9B,CAACW,QAAD,EAAWC,OAAX,KAAuB;AACrBX,IAAAA,OAAO,CAACQ,GAAR,CAAYN,IAAZ,EAAkBQ,QAAlB,EAA4BC,OAA5B;AACAN,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,GAJ6B,EAK9B,CAACR,IAAD,CAL8B,CAAhC;AAQA,QAAMU,YAAY,GAAGb,WAAW,CAAC,MAAM;AACrCC,IAAAA,OAAO,CAACa,MAAR,CAAeX,IAAf;AACAG,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAH+B,EAG7B,CAACH,IAAD,CAH6B,CAAhC;AAKA,SAAO,CAACE,KAAD,EAAQK,YAAR,EAAsBG,YAAtB,CAAP;AACD;;GAtBuBX,S","sourcesContent":["import { useState, useCallback } from \"react\"\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport default function useCookie(name, defaultValue) {\r\n  const [value, setValue] = useState(() => {\r\n    const cookie = Cookies.get(name)\r\n    if (cookie) return cookie\r\n    Cookies.set(name, defaultValue)\r\n    return defaultValue\r\n  })\r\n\r\n  const updateCookie = useCallback(\r\n    (newValue, options) => {\r\n      Cookies.set(name, newValue, options)\r\n      setValue(newValue)\r\n    },\r\n    [name]\r\n  )\r\n\r\n  const deleteCookie = useCallback(() => {\r\n    Cookies.remove(name)\r\n    setValue(null)\r\n  }, [name])\r\n\r\n  return [value, updateCookie, deleteCookie]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}