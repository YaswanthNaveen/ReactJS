{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaswa\\\\OneDrive\\\\MyReact\\\\MyReact\\\\useful-custom-hooks\\\\src\\\\20-useEffectOnce\\\\EffectOnceComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useEffectOnce from \"./useEffectOnce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EffectOnceComponent() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  useEffectOnce(() => alert(\"Hi\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EffectOnceComponent, \"Gy/o0qIaS4VDnFKImAf0pWNsQJE=\", false, function () {\n  return [useEffectOnce];\n});\n\n_c = EffectOnceComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EffectOnceComponent\");","map":{"version":3,"sources":["C:/Users/yaswa/OneDrive/MyReact/MyReact/useful-custom-hooks/src/20-useEffectOnce/EffectOnceComponent.js"],"names":["useState","useEffectOnce","EffectOnceComponent","count","setCount","alert","c"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,aAAa,CAAC,MAAMI,KAAK,CAAC,IAAD,CAAZ,CAAb;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACE,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAXuBJ,mB;UAGtBD,a;;;KAHsBC,mB","sourcesContent":["import { useState } from \"react\"\r\nimport useEffectOnce from \"./useEffectOnce\"\r\n\r\nexport default function EffectOnceComponent() {\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffectOnce(() => alert(\"Hi\"))\r\n\r\n  return (\r\n    <>\r\n      <div>{count}</div>\r\n      <button onClick={() => setCount(c => c + 1)}>Increment</button>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}