{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaswa\\\\OneDrive\\\\MyReact\\\\MyReact\\\\useful-custom-hooks\\\\src\\\\23-useCopyToClipboard\\\\CopyToClipboardComponent.js\",\n    _s = $RefreshSig$();\n\nimport useCopyToClipboard from \"./useCopyToClipboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CopyToClipboardComponent() {\n  _s();\n\n  const [copyToClipboard, {\n    success\n  }] = useCopyToClipboard();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => copyToClipboard(\"This was copied\"),\n      children: success ? \"Copied\" : \"Copy Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CopyToClipboardComponent, \"Z+bZtIS7PKjp2Swq5c7yUOaoaaQ=\", false, function () {\n  return [useCopyToClipboard];\n});\n\n_c = CopyToClipboardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CopyToClipboardComponent\");","map":{"version":3,"sources":["C:/Users/yaswa/OneDrive/MyReact/MyReact/useful-custom-hooks/src/23-useCopyToClipboard/CopyToClipboardComponent.js"],"names":["useCopyToClipboard","CopyToClipboardComponent","copyToClipboard","success"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;;;AAEA,eAAe,SAASC,wBAAT,GAAoC;AAAA;;AACjD,QAAM,CAACC,eAAD,EAAkB;AAAEC,IAAAA;AAAF,GAAlB,IAAiCH,kBAAkB,EAAzD;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAME,eAAe,CAAC,iBAAD,CAAtC;AAAA,gBACGC,OAAO,GAAG,QAAH,GAAc;AADxB;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GAXuBF,wB;UACiBD,kB;;;KADjBC,wB","sourcesContent":["import useCopyToClipboard from \"./useCopyToClipboard\"\r\n\r\nexport default function CopyToClipboardComponent() {\r\n  const [copyToClipboard, { success }] = useCopyToClipboard()\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => copyToClipboard(\"This was copied\")}>\r\n        {success ? \"Copied\" : \"Copy Text\"}\r\n      </button>\r\n      <input type=\"text\" />\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}